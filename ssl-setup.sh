#!/bin/bash

# üöÄ CRM System - SSL Setup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ Let's Encrypt

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root –ø—Ä–∞–≤
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_DIR="/opt/crm-system"
SSL_DIR="$PROJECT_DIR/ssl"
CERTS_DIR="$SSL_DIR/certs"
DOMAINS=(
    "admin.stage.seniorpomidornaya.ru"
    "grafana.stage.seniorpomidornaya.ru"
    "kafka-ui.stage.seniorpomidornaya.ru"
)

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è CRM —Å–∏—Å—Ç–µ–º—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞
if ! docker-compose -f "$PROJECT_DIR/docker-compose.yml" ps | grep -q "crm_nginx"; then
    error "‚ùå CRM —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: bash $PROJECT_DIR/start.sh"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
mkdir -p "$CERTS_DIR"
chmod 700 "$SSL_DIR"
chmod 600 "$CERTS_DIR"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
docker-compose -f "$PROJECT_DIR/docker-compose.yml" stop nginx

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "üìù –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx"
mkdir -p /tmp/nginx-temp
cat > "/tmp/nginx-temp/nginx.conf" << 'EOF'
events {
    worker_connections 768;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    server {
        listen 80;
        server_name _;
        
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
}
EOF

# –ó–∞–ø—É—Å–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
docker run -d --name nginx-temp \
    -p 80:80 \
    -v /tmp/nginx-temp/nginx.conf:/etc/nginx/nginx.conf:ro \
    -v /var/www/html:/var/www/html \
    nginx:alpine

# –°–æ–∑–¥–∞–Ω–∏–µ webroot –¥–ª—è ACME challenge
mkdir -p /var/www/html/.well-known/acme-challenge

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —á–µ—Ä–µ–∑ Let's Encrypt"
for domain in "${DOMAINS[@]}"; do
    log "üìã –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain"
    
    if certbot certonly --webroot \
        --webroot-path=/var/www/html \
        --email admin@seniorpomidornaya.ru \
        --agree-tos \
        --no-eff-email \
        --domains "$domain"; then
        
        log "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        cp "/etc/letsencrypt/live/$domain/fullchain.pem" "$CERTS_DIR/$domain.crt"
        cp "/etc/letsencrypt/live/$domain/privkey.pem" "$CERTS_DIR/$domain.key"
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        chmod 644 "$CERTS_DIR/$domain.crt"
        chmod 600 "$CERTS_DIR/$domain.key"
        chown crm:crm "$CERTS_DIR/$domain.crt"
        chown crm:crm "$CERTS_DIR/$domain.key"
        
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain"
    fi
done

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ nginx
log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx"
docker stop nginx-temp
docker rm nginx-temp

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å SSL
log "üìã –û–±–Ω–æ–≤–ª—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å SSL"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ admin.stage.seniorpomidornaya.ru
sed -i 's/# ssl_certificate/ssl_certificate/g' "$PROJECT_DIR/deploy/nginx/sites-available/admin.stage.seniorpomidornaya.ru"
sed -i 's/# ssl_certificate_key/ssl_certificate_key/g' "$PROJECT_DIR/deploy/nginx/sites-available/admin.stage.seniorpomidornaya.ru"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ grafana.stage.seniorpomidornaya.ru
sed -i 's/# ssl_certificate/ssl_certificate/g' "$PROJECT_DIR/deploy/nginx/sites-available/grafana.stage.seniorpomidornaya.ru"
sed -i 's/# ssl_certificate_key/ssl_certificate_key/g' "$PROJECT_DIR/deploy/nginx/sites-available/grafana.stage.seniorpomidornaya.ru"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ kafka-ui.stage.seniorpomidornaya.ru
sed -i 's/# ssl_certificate/ssl_certificate/g' "$PROJECT_DIR/deploy/nginx/sites-available/kafka-ui.stage.seniorpomidornaya.ru"
sed -i 's/# ssl_certificate_key/ssl_certificate_key/g' "$PROJECT_DIR/deploy/nginx/sites-available/kafka-ui.stage.seniorpomidornaya.ru"

# –ó–∞–ø—É—Å–∫ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å SSL"
docker-compose -f "$PROJECT_DIR/docker-compose.yml" up -d nginx

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
log "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
cat > "$SSL_DIR/renew-certs.sh" << 'EOF'
#!/bin/bash

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
certbot renew --quiet

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
cd /opt/crm-system
docker-compose restart nginx

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
PROJECT_DIR="/opt/crm-system"
CERTS_DIR="$PROJECT_DIR/ssl/certs"

for cert in /etc/letsencrypt/live/*/; do
    domain=$(basename "$cert")
    if [ -f "$cert/fullchain.pem" ] && [ -f "$cert/privkey.pem" ]; then
        cp "$cert/fullchain.pem" "$CERTS_DIR/$domain.crt"
        cp "$cert/privkey.pem" "$CERTS_DIR/$domain.key"
        chmod 644 "$CERTS_DIR/$domain.crt"
        chmod 600 "$CERTS_DIR/$domain.key"
        chown crm:crm "$CERTS_DIR/$domain.crt"
        chown crm:crm "$CERTS_DIR/$domain.key"
    fi
done
EOF

chmod +x "$SSL_DIR/renew-certs.sh"

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
(crontab -l 2>/dev/null; echo "0 12 * * * $SSL_DIR/renew-certs.sh") | crontab -

log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
log "üìã –î–æ–º–µ–Ω—ã:"
for domain in "${DOMAINS[@]}"; do
    log "   - https://$domain"
done
log "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00)"
log "üìÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $CERTS_DIR"
